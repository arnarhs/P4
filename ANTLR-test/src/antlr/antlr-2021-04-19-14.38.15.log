2021-04-19 14:38:15:294 grammar LogManager.java:25 before: (COMBINED_GRAMMAR expression (@ header {
    package antlr;
}) (RULES (RULE prog (BLOCK (ALT (+ (BLOCK (ALT decl) (ALT expr))) EOF))) (RULE decl (BLOCK (ALT declReaction) (ALT declInt))) (RULE declReaction (BLOCK (ALT KEYWORD ID ':' valueExpr) (ALT KEYWORD ID))) (RULE declInt (BLOCK (ALT INT ID ':' valueExpr) (ALT INT ID))) (RULE expr (BLOCK (ALT valueExpr) (ALT ifStmt))) (RULE valueExpr (BLOCK (ALT opExpr '=>' opExpr '(' opExpr ')') (ALT opExpr '=>' opExpr) (ALT opExpr))) (RULE opExpr (BLOCK (ALT '(' opExpr ')') (ALT opExpr '*' opExpr) (ALT opExpr '/' opExpr) (ALT opExpr '-' opExpr) (ALT opExpr '+' opExpr) (ALT value))) (RULE ifStmt (BLOCK (ALT KEYWORD '(' ifConds ')' '{' expr '}' els))) (RULE els (BLOCK (ALT (* (BLOCK (ALT elseifStmt))) (? (BLOCK (ALT elseStmt)))))) (RULE elseifStmt (BLOCK (ALT KEYWORD KEYWORD '(' ifConds ')' '{' expr '}'))) (RULE elseStmt (BLOCK (ALT KEYWORD '{' expr '}'))) (RULE ifConds (BLOCK (ALT logicExpr LOGOP ifConds) (ALT logicExpr))) (RULE logicExpr (BLOCK (ALT BOOL) (ALT opExpr RELOP opExpr))) (RULE value (BLOCK (ALT NUM) (ALT ID))) (RULE KEYWORD (BLOCK (ALT 'species') (ALT 'solution') (ALT 'reaction') (ALT 'print') (ALT 'while') (ALT 'if') (ALT 'else'))) (RULE INT (BLOCK (ALT 'int'))) (RULE SSA (BLOCK (ALT 'ssa'))) (RULE LIST (BLOCK (ALT 'list'))) (RULE RELOP (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '!='))) (RULE LOGOP (BLOCK (ALT '||') (ALT '&&'))) (RULE BOOL (BLOCK (ALT 'true') (ALT 'false'))) (RULE ID (BLOCK (ALT [a-z] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE NUM (BLOCK (ALT '0') (ALT (? (BLOCK (ALT '-'))) [1-9] (* (BLOCK (ALT [0-9])))))) (RULE COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \r\t\n])))) (LEXER_ACTION_CALL channel HIDDEN))))))
2021-04-19 14:38:15:314 grammar LogManager.java:25 after: (COMBINED_GRAMMAR expression (@ header {
    package antlr;
}) (RULES (RULE prog (BLOCK (ALT (+ (BLOCK (ALT decl) (ALT expr))) EOF))) (RULE decl (BLOCK (ALT declReaction) (ALT declInt))) (RULE declReaction (BLOCK (ALT KEYWORD ID ':' valueExpr) (ALT KEYWORD ID))) (RULE declInt (BLOCK (ALT INT ID ':' valueExpr) (ALT INT ID))) (RULE expr (BLOCK (ALT valueExpr) (ALT ifStmt))) (RULE valueExpr (BLOCK (ALT opExpr '=>' opExpr '(' opExpr ')') (ALT opExpr '=>' opExpr) (ALT opExpr))) (RULE opExpr (BLOCK (ALT '(' opExpr ')') (ALT opExpr '*' opExpr) (ALT opExpr '/' opExpr) (ALT opExpr '-' opExpr) (ALT opExpr '+' opExpr) (ALT value))) (RULE ifStmt (BLOCK (ALT KEYWORD '(' ifConds ')' '{' expr '}' els))) (RULE els (BLOCK (ALT (* (BLOCK (ALT elseifStmt))) (? (BLOCK (ALT elseStmt)))))) (RULE elseifStmt (BLOCK (ALT KEYWORD KEYWORD '(' ifConds ')' '{' expr '}'))) (RULE elseStmt (BLOCK (ALT KEYWORD '{' expr '}'))) (RULE ifConds (BLOCK (ALT logicExpr LOGOP ifConds) (ALT logicExpr))) (RULE logicExpr (BLOCK (ALT BOOL) (ALT opExpr RELOP opExpr))) (RULE value (BLOCK (ALT NUM) (ALT ID))) (RULE KEYWORD (BLOCK (ALT 'species') (ALT 'solution') (ALT 'reaction') (ALT 'print') (ALT 'while') (ALT 'if') (ALT 'else'))) (RULE INT (BLOCK (ALT 'int'))) (RULE SSA (BLOCK (ALT 'ssa'))) (RULE LIST (BLOCK (ALT 'list'))) (RULE RELOP (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '!='))) (RULE LOGOP (BLOCK (ALT '||') (ALT '&&'))) (RULE BOOL (BLOCK (ALT 'true') (ALT 'false'))) (RULE ID (BLOCK (ALT [a-z] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE NUM (BLOCK (ALT '0') (ALT (? (BLOCK (ALT '-'))) [1-9] (* (BLOCK (ALT [0-9])))))) (RULE COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \r\t\n])))) (LEXER_ACTION_CALL channel HIDDEN))))))
2021-04-19 14:38:15:336 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR expression (@ header {
    package antlr;
}) (RULES (RULE prog (BLOCK (ALT (+ (BLOCK (ALT decl) (ALT expr))) EOF))) (RULE decl (BLOCK (ALT declReaction) (ALT declInt))) (RULE declReaction (BLOCK (ALT KEYWORD ID ':' valueExpr) (ALT KEYWORD ID))) (RULE declInt (BLOCK (ALT INT ID ':' valueExpr) (ALT INT ID))) (RULE expr (BLOCK (ALT valueExpr) (ALT ifStmt))) (RULE valueExpr (BLOCK (ALT opExpr '=>' opExpr '(' opExpr ')') (ALT opExpr '=>' opExpr) (ALT opExpr))) (RULE opExpr (BLOCK (ALT '(' opExpr ')') (ALT opExpr '*' opExpr) (ALT opExpr '/' opExpr) (ALT opExpr '-' opExpr) (ALT opExpr '+' opExpr) (ALT value))) (RULE ifStmt (BLOCK (ALT KEYWORD '(' ifConds ')' '{' expr '}' els))) (RULE els (BLOCK (ALT (* (BLOCK (ALT elseifStmt))) (? (BLOCK (ALT elseStmt)))))) (RULE elseifStmt (BLOCK (ALT KEYWORD KEYWORD '(' ifConds ')' '{' expr '}'))) (RULE elseStmt (BLOCK (ALT KEYWORD '{' expr '}'))) (RULE ifConds (BLOCK (ALT logicExpr LOGOP ifConds) (ALT logicExpr))) (RULE logicExpr (BLOCK (ALT BOOL) (ALT opExpr RELOP opExpr))) (RULE value (BLOCK (ALT NUM) (ALT ID)))))
2021-04-19 14:38:15:336 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR expressionLexer (@ header {
    package antlr;
}) (RULES (RULE T__0 (BLOCK (ALT ':'))) (RULE T__1 (BLOCK (ALT '=>'))) (RULE T__2 (BLOCK (ALT '('))) (RULE T__3 (BLOCK (ALT ')'))) (RULE T__4 (BLOCK (ALT '*'))) (RULE T__5 (BLOCK (ALT '/'))) (RULE T__6 (BLOCK (ALT '-'))) (RULE T__7 (BLOCK (ALT '+'))) (RULE T__8 (BLOCK (ALT '{'))) (RULE T__9 (BLOCK (ALT '}'))) (RULE KEYWORD (BLOCK (ALT 'species') (ALT 'solution') (ALT 'reaction') (ALT 'print') (ALT 'while') (ALT 'if') (ALT 'else'))) (RULE INT (BLOCK (ALT 'int'))) (RULE SSA (BLOCK (ALT 'ssa'))) (RULE LIST (BLOCK (ALT 'list'))) (RULE RELOP (BLOCK (ALT '<') (ALT '<=') (ALT '>') (ALT '>=') (ALT '==') (ALT '!='))) (RULE LOGOP (BLOCK (ALT '||') (ALT '&&'))) (RULE BOOL (BLOCK (ALT 'true') (ALT 'false'))) (RULE ID (BLOCK (ALT [a-z] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE NUM (BLOCK (ALT '0') (ALT (? (BLOCK (ALT '-'))) [1-9] (* (BLOCK (ALT [0-9])))))) (RULE COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \r\t\n])))) (LEXER_ACTION_CALL channel HIDDEN))))))
2021-04-19 14:38:15:542 action-translator LogManager.java:25 translate 
    package antlr;

2021-04-19 14:38:15:622 left-recursion LogManager.java:25 opExpr
    :   ( {} '('<tokenIndex=176> opExpr<tokenIndex=178> ')'<tokenIndex=180>						       
        | value<tokenIndex=236>                                        
        )
        (
          {precpred(_ctx, 5)}?<p=5> '*'<tokenIndex=190> opExpr<tokenIndex=192,p=6>
                  | {precpred(_ctx, 4)}?<p=4> '/'<tokenIndex=202> opExpr<tokenIndex=204,p=5>
                  | {precpred(_ctx, 3)}?<p=3> '-'<tokenIndex=214> opExpr<tokenIndex=216,p=4>
                  | {precpred(_ctx, 2)}?<p=2> '+'<tokenIndex=226> opExpr<tokenIndex=228,p=3>
        )*
    ;
2021-04-19 14:38:15:627 grammar LogManager.java:25 added: (RULE opExpr (BLOCK (ALT (BLOCK (ALT {} ('(' (ELEMENT_OPTIONS (= tokenIndex 176))) (opExpr (ELEMENT_OPTIONS (= tokenIndex 178))) (')' (ELEMENT_OPTIONS (= tokenIndex 180)))) (ALT (value (ELEMENT_OPTIONS (= tokenIndex 236))))) (* (BLOCK (ALT ({precpred(_ctx, 5)}? (ELEMENT_OPTIONS (= p 5))) ('*' (ELEMENT_OPTIONS (= tokenIndex 190))) (opExpr (ELEMENT_OPTIONS (= tokenIndex 192) (= p 6)))) (ALT ({precpred(_ctx, 4)}? (ELEMENT_OPTIONS (= p 4))) ('/' (ELEMENT_OPTIONS (= tokenIndex 202))) (opExpr (ELEMENT_OPTIONS (= tokenIndex 204) (= p 5)))) (ALT ({precpred(_ctx, 3)}? (ELEMENT_OPTIONS (= p 3))) ('-' (ELEMENT_OPTIONS (= tokenIndex 214))) (opExpr (ELEMENT_OPTIONS (= tokenIndex 216) (= p 4)))) (ALT ({precpred(_ctx, 2)}? (ELEMENT_OPTIONS (= p 2))) ('+' (ELEMENT_OPTIONS (= tokenIndex 226))) (opExpr (ELEMENT_OPTIONS (= tokenIndex 228) (= p 3)))))))))
2021-04-19 14:38:15:630 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, T__9=10, KEYWORD=11, INT=12, SSA=13, LIST=14, RELOP=15, LOGOP=16, BOOL=17, ID=18, NUM=19, COMMENT=20, WS=21}
2021-04-19 14:38:15:630 semantics LogManager.java:25 strings={':'=1, '=>'=2, '('=3, ')'=4, '*'=5, '/'=6, '-'=7, '+'=8, '{'=9, '}'=10, 'int'=12, 'ssa'=13, 'list'=14}
2021-04-19 14:38:15:640 LL1 LogManager.java:25 
DECISION 0 in rule prog
2021-04-19 14:38:15:640 LL1 LogManager.java:25 look=[{11..12}, {3, 11, 18..19}]
2021-04-19 14:38:15:640 LL1 LogManager.java:25 LL(1)? false
2021-04-19 14:38:15:640 LL1 LogManager.java:25 
DECISION 1 in rule prog
2021-04-19 14:38:15:641 LL1 LogManager.java:25 look=[{3, 11..12, 18..19}, <EOF>]
2021-04-19 14:38:15:641 LL1 LogManager.java:25 LL(1)? true
2021-04-19 14:38:15:641 LL1 LogManager.java:25 
DECISION 2 in rule decl
2021-04-19 14:38:15:641 LL1 LogManager.java:25 look=[11, 12]
2021-04-19 14:38:15:641 LL1 LogManager.java:25 LL(1)? true
2021-04-19 14:38:15:641 LL1 LogManager.java:25 
DECISION 3 in rule declReaction
2021-04-19 14:38:15:641 LL1 LogManager.java:25 look=[11, 11]
2021-04-19 14:38:15:641 LL1 LogManager.java:25 LL(1)? false
2021-04-19 14:38:15:641 LL1 LogManager.java:25 
DECISION 4 in rule declInt
2021-04-19 14:38:15:641 LL1 LogManager.java:25 look=[12, 12]
2021-04-19 14:38:15:641 LL1 LogManager.java:25 LL(1)? false
2021-04-19 14:38:15:641 LL1 LogManager.java:25 
DECISION 5 in rule expr
2021-04-19 14:38:15:641 LL1 LogManager.java:25 look=[{3, 18..19}, 11]
2021-04-19 14:38:15:641 LL1 LogManager.java:25 LL(1)? true
2021-04-19 14:38:15:641 LL1 LogManager.java:25 
DECISION 6 in rule valueExpr
2021-04-19 14:38:15:641 LL1 LogManager.java:25 look=[{3, 18..19}, {3, 18..19}, {3, 18..19}]
2021-04-19 14:38:15:641 LL1 LogManager.java:25 LL(1)? false
2021-04-19 14:38:15:641 LL1 LogManager.java:25 
DECISION 7 in rule opExpr
2021-04-19 14:38:15:641 LL1 LogManager.java:25 look=[3, {18..19}]
2021-04-19 14:38:15:641 LL1 LogManager.java:25 LL(1)? true
2021-04-19 14:38:15:641 LL1 LogManager.java:25 
DECISION 8 in rule opExpr
2021-04-19 14:38:15:641 LL1 LogManager.java:25 look=[null, null, null, null]
2021-04-19 14:38:15:641 LL1 LogManager.java:25 LL(1)? false
2021-04-19 14:38:15:641 LL1 LogManager.java:25 
DECISION 9 in rule opExpr
2021-04-19 14:38:15:644 LL1 LogManager.java:25 look=[null, null]
2021-04-19 14:38:15:644 LL1 LogManager.java:25 LL(1)? false
2021-04-19 14:38:15:644 LL1 LogManager.java:25 
DECISION 10 in rule els
2021-04-19 14:38:15:644 LL1 LogManager.java:25 look=[11, {<EOF>, 3, 10..12, 18..19}]
2021-04-19 14:38:15:644 LL1 LogManager.java:25 LL(1)? false
2021-04-19 14:38:15:644 LL1 LogManager.java:25 
DECISION 11 in rule els
2021-04-19 14:38:15:644 LL1 LogManager.java:25 look=[11, {<EOF>, 3, 10..12, 18..19}]
2021-04-19 14:38:15:644 LL1 LogManager.java:25 LL(1)? false
2021-04-19 14:38:15:644 LL1 LogManager.java:25 
DECISION 12 in rule ifConds
2021-04-19 14:38:15:644 LL1 LogManager.java:25 look=[{3, 17..19}, {3, 17..19}]
2021-04-19 14:38:15:644 LL1 LogManager.java:25 LL(1)? false
2021-04-19 14:38:15:644 LL1 LogManager.java:25 
DECISION 13 in rule logicExpr
2021-04-19 14:38:15:644 LL1 LogManager.java:25 look=[17, {3, 18..19}]
2021-04-19 14:38:15:644 LL1 LogManager.java:25 LL(1)? true
2021-04-19 14:38:15:645 LL1 LogManager.java:25 
DECISION 14 in rule value
2021-04-19 14:38:15:645 LL1 LogManager.java:25 look=[19, 18]
2021-04-19 14:38:15:645 LL1 LogManager.java:25 LL(1)? true
2021-04-19 14:38:15:646 action-translator LogManager.java:25 translate 
    package antlr;

2021-04-19 14:38:15:665 action-translator LogManager.java:25 translate 
2021-04-19 14:38:15:666 action-translator LogManager.java:25 translate precpred(_ctx, 5)
2021-04-19 14:38:15:666 action-translator LogManager.java:25 translate precpred(_ctx, 4)
2021-04-19 14:38:15:667 action-translator LogManager.java:25 translate precpred(_ctx, 3)
2021-04-19 14:38:15:667 action-translator LogManager.java:25 translate precpred(_ctx, 2)
2021-04-19 14:38:15:669 action-translator LogManager.java:25 translate precpred(_ctx, 5)
2021-04-19 14:38:15:669 action-translator LogManager.java:25 translate precpred(_ctx, 4)
2021-04-19 14:38:15:669 action-translator LogManager.java:25 translate precpred(_ctx, 3)
2021-04-19 14:38:15:669 action-translator LogManager.java:25 translate precpred(_ctx, 2)
2021-04-19 14:38:15:724 action-translator LogManager.java:25 translate 
    package antlr;

2021-04-19 14:38:15:724 action-translator LogManager.java:25 translate 
    package antlr;

2021-04-19 14:38:15:735 action-translator LogManager.java:25 translate 
    package antlr;

2021-04-19 14:38:15:735 action-translator LogManager.java:25 translate 
    package antlr;

2021-04-19 14:38:15:744 action-translator LogManager.java:25 translate 
    package antlr;

2021-04-19 14:38:15:744 action-translator LogManager.java:25 translate 
    package antlr;

2021-04-19 14:38:15:747 action-translator LogManager.java:25 translate 
    package antlr;

2021-04-19 14:38:15:747 action-translator LogManager.java:25 translate 
    package antlr;

